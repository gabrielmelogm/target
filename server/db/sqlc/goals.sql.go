// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: goals.sql

package db

import (
	"context"
)

const createNewGoal = `-- name: CreateNewGoal :one
INSERT INTO public.goals
(id, title, desired_weekly_frequency, created_at)
VALUES($1, $2, $3, now()) RETURNING id, title, desired_weekly_frequency, created_at
`

type CreateNewGoalParams struct {
	ID                     string `json:"id"`
	Title                  string `json:"title"`
	DesiredWeeklyFrequency int32  `json:"desired_weekly_frequency"`
}

func (q *Queries) CreateNewGoal(ctx context.Context, arg CreateNewGoalParams) (Goal, error) {
	row := q.db.QueryRowContext(ctx, createNewGoal, arg.ID, arg.Title, arg.DesiredWeeklyFrequency)
	var i Goal
	err := row.Scan(
		&i.ID,
		&i.Title,
		&i.DesiredWeeklyFrequency,
		&i.CreatedAt,
	)
	return i, err
}

const deleteAllGoalCompletions = `-- name: DeleteAllGoalCompletions :exec
DELETE FROM public.goal_completions
`

func (q *Queries) DeleteAllGoalCompletions(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllGoalCompletions)
	return err
}

const deleteAllGoals = `-- name: DeleteAllGoals :exec
DELETE FROM public.goals
`

func (q *Queries) DeleteAllGoals(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, deleteAllGoals)
	return err
}
